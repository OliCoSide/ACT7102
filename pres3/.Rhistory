rename("u1" = "u1_hat",
"u2" = "u2_hat") %>%
mutate(hat = "empiriques")
) %>%
mutate(paired = rep(1:nrow(sims), 2)) %>%
ggplot(aes(x = u1, y = u2, color = hat)) +
geom_point(alpha = 0.4, size = 4) +
theme_bw()+
geom_line(aes(group = paired), color = "black", alpha = 0.15, size = 1.5) +
scale_color_brewer(palette = "Dark2") +
labs(title = TeX("Relation entre les u simulés et les quantiles empiriques $\\hat{u}$"),
x = TeX("$u_1$"),
y = TeX("$u_2$")) +
theme(legend.title = element_blank())
rbind(sims %>%
select(u1, u2) %>%
mutate(hat = "Simulés"),
sims %>%
select(u1_hat, u2_hat) %>%
rename("u1" = "u1_hat",
"u2" = "u2_hat") %>%
mutate(hat = "Empiriques")
) %>%
mutate(paired = rep(1:nrow(sims), 2)) %>%
ggplot(aes(x = u1, y = u2, color = hat)) +
geom_point(alpha = 0.4, size = 4) +
theme_bw()+
geom_line(aes(group = paired), color = "black", alpha = 0.15, size = 1.5) +
scale_color_brewer(palette = "Dark2") +
labs(title = TeX("Relation entre les u simulés et les quantiles empiriques $\\hat{u}$"),
x = TeX("$u_1$"),
y = TeX("$u_2$")) +
theme(legend.title = element_blank())
rbind(sims %>%
select(u1, u2) %>%
mutate(hat = "Simulés"),
sims %>%
select(u1_hat, u2_hat) %>%
rename("u1" = "u1_hat",
"u2" = "u2_hat") %>%
mutate(hat = "Empiriques")
) %>%
mutate(paired = rep(1:nrow(sims), 2)) %>%
ggplot(aes(x = u1, y = u2, color = hat)) +
geom_point(alpha = 0.4, size = 2) +
theme_bw()+
geom_line(aes(group = paired), color = "black", alpha = 0.15, size = 1.5) +
scale_color_brewer(palette = "Dark2") +
labs(title = TeX("Relation entre les u simulés et les quantiles empiriques $\\hat{u}$"),
x = TeX("$u_1$"),
y = TeX("$u_2$")) +
theme(legend.title = element_blank())
rbind(sims %>%
select(u1, u2) %>%
mutate(hat = "Simulés"),
sims %>%
select(u1_hat, u2_hat) %>%
rename("u1" = "u1_hat",
"u2" = "u2_hat") %>%
mutate(hat = "Empiriques")
) %>%
mutate(paired = rep(1:nrow(sims), 2)) %>%
ggplot(aes(x = u1, y = u2, color = hat)) +
geom_point(alpha = 0.4, size = 2) +
theme_bw()+
geom_line(aes(group = paired), color = "black", alpha = 0.15, size = 1) +
scale_color_brewer(palette = "Dark2") +
labs(title = TeX("Relation entre les u simulés et les quantiles empiriques $\\hat{u}$"),
x = TeX("$u_1$"),
y = TeX("$u_2$")) +
theme(legend.title = element_blank())
g <- rbind(sims %>%
select(u1, u2) %>%
mutate(hat = "Simulés"),
sims %>%
select(u1_hat, u2_hat) %>%
rename("u1" = "u1_hat",
"u2" = "u2_hat") %>%
mutate(hat = "Empiriques")
) %>%
mutate(paired = rep(1:nrow(sims), 2)) %>%
ggplot(aes(x = u1, y = u2, color = hat)) +
geom_point(alpha = 0.4, size = 2) +
theme_bw()+
geom_line(aes(group = paired), color = "black", alpha = 0.15, size = 1) +
scale_color_brewer(palette = "Dark2") +
labs(title = TeX("Relation entre les u simulés et les quantiles empiriques $\\hat{u}$"),
x = TeX("$u_1$"),
y = TeX("$u_2$")) +
theme(legend.title = element_blank())
setwd("C:/Users/olico/OneDrive - Université Laval/ULaval/10 - H22/ACT-7102 Théorie du risque avancée/ACT7102_code/pres3")
ggsave("fig/comp_u1u2.png",
g,
width = 4,
height = 4,
units = "cm")
ggsave("fig/comp_u1u2.png",
g,
width = 12,
height = 12,
units = "cm")
ggsave("fig/comp_u1u2.png",
g,
width = 16,
height = 12,
units = "cm")
ggsave("fig/comp_u1u2.png",
g,
width = 15,
height = 11,
units = "cm")
g <- rbind(sims %>%
select(u1, u2) %>%
mutate(hat = "Simulés"),
sims %>%
select(u1_hat, u2_hat) %>%
rename("u1" = "u1_hat",
"u2" = "u2_hat") %>%
mutate(hat = "Empiriques")
) %>%
mutate(paired = rep(1:nrow(sims), 2)) %>%
ggplot(aes(x = u1, y = u2, color = hat)) +
geom_point(alpha = 0.4, size = 2) +
theme_bw()+
geom_line(aes(group = paired), color = "black", alpha = 0.15, size = 0.7) +
scale_color_brewer(palette = "Dark2") +
labs(title = TeX("Relation entre les u simulés et les quantiles empiriques $\\hat{u}$"),
x = TeX("$u_1$"),
y = TeX("$u_2$")) +
theme(legend.title = element_blank())
g <- rbind(sims %>%
select(u1, u2) %>%
mutate(hat = "Simulés"),
sims %>%
select(u1_hat, u2_hat) %>%
rename("u1" = "u1_hat",
"u2" = "u2_hat") %>%
mutate(hat = "Empiriques")
) %>%
mutate(paired = rep(1:nrow(sims), 2)) %>%
ggplot(aes(x = u1, y = u2, color = hat)) +
geom_point(alpha = 0.4, size = 1.5) +
theme_bw()+
geom_line(aes(group = paired), color = "black", alpha = 0.15, size = 0.5) +
scale_color_brewer(palette = "Dark2") +
labs(title = TeX("Relation entre les u simulés et les quantiles empiriques $\\hat{u}$"),
x = TeX("$u_1$"),
y = TeX("$u_2$")) +
theme(legend.title = element_blank())
rep(1:nrow(sims), 2)
##empCopula
cop1 <- normalCopula(0.7, dim = 2)
u_simulated <- rCopula(100, cop1)
## répartition de mix erl
p_dist_oli <- function(x){
sum(dnbinom(0:50, size = 4, mu = 5) *
pgamma(x, 0:50 + 1, 0.1))
}
VaR_MixErl <- function(kap){optimize(function(x){log(abs(kap - p_dist_oli(x)))},
interval = c(0, 350))$minimum}
## sim x1
sim_x1 <- sapply(u_simulated[, 1], function(u) VaR_MixErl(u))
## diagnostic rapide
mean(sim_x1)
diff_u1 <- u_simulated[, 1] - sapply(sim_x1, function(x) p_dist_oli(x))
hist(diff_u1)
summary(diff_u1)
plot(u_simulated[, 1] ~ sapply(sim_x1, function(x) p_dist_oli(x)))
## sim x2
library(tidyverse)
library(actuar)
sim_x2 <- qgenpareto(u_simulated[, 2], shape1 = 3,
shape2 = 5,
scale = 50)
sims  <- data.frame(u_simulated, x1 = sim_x1, x2 = sim_x2)
names(sims)[1:2] <- c("u1", "u2")
names(sims)
sims %>% ggplot(aes(x = u1, y = u2)) + geom_point()
sims %>% ggplot(aes(x = x1, y = x2)) + geom_point()
sims$u1_hat <- rank(sims$x1)/(nrow(sims) + 1)
sims$u2_hat <- rank(sims$x2)/(nrow(sims) + 1)
library(latex2exp)
g <- rbind(sims %>%
select(u1, u2) %>%
mutate(hat = "Simulés"),
sims %>%
select(u1_hat, u2_hat) %>%
rename("u1" = "u1_hat",
"u2" = "u2_hat") %>%
mutate(hat = "Empiriques")
) %>%
mutate(paired = rep(1:nrow(sims), 2)) %>%
ggplot(aes(x = u1, y = u2, color = hat)) +
geom_point(alpha = 0.4, size = 1.5) +
theme_bw()+
geom_line(aes(group = paired), color = "black", alpha = 0.15, size = 0.5) +
scale_color_brewer(palette = "Dark2") +
labs(title = TeX("Relation entre les u simulés et les quantiles empiriques $\\hat{u}$"),
x = TeX("$u_1$"),
y = TeX("$u_2$")) +
theme(legend.title = element_blank())
ggsave("fig/comp_u1u2.png",
g,
width = 15,
height = 11,
units = "cm")
cop
cop1
dCopula(sims$u1_hat, sims$u2_hat, copula = normalCopula(dim = 2))
matrix(c(sims$u1_hat, sims$u2_hat),
byrow = FALSE, ncol = 2)
dCopula(matrix(c(sims$u1_hat, sims$u2_hat),
byrow = FALSE, ncol = 2), copula = normalCopula(dim = 2))
mat1 <- matrix(c(sims$u1_hat, sims$u2_hat),
byrow = FALSE, ncol = 2)
dCopula(mat1[1,], copula = normalCopula(dim = 2))
##empCopula
cop1 <- archmCopula(family = "joe", param = 0.5, dim = 2)
##empCopula
cop1 <- archmCopula(family = "joe", param = 5, dim = 2)
u_simulated <- rCopula(100, cop1)
## répartition de mix erl
p_dist_oli <- function(x){
sum(dnbinom(0:50, size = 4, mu = 5) *
pgamma(x, 0:50 + 1, 0.1))
}
VaR_MixErl <- function(kap){optimize(function(x){log(abs(kap - p_dist_oli(x)))},
interval = c(0, 350))$minimum}
## sim x1
sim_x1 <- sapply(u_simulated[, 1], function(u) VaR_MixErl(u))
## diagnostic rapide
mean(sim_x1)
diff_u1 <- u_simulated[, 1] - sapply(sim_x1, function(x) p_dist_oli(x))
hist(diff_u1)
summary(diff_u1)
plot(u_simulated[, 1] ~ sapply(sim_x1, function(x) p_dist_oli(x)))
## sim x2
library(tidyverse)
library(actuar)
sim_x2 <- qgenpareto(u_simulated[, 2], shape1 = 3,
shape2 = 5,
scale = 50)
sims  <- data.frame(u_simulated, x1 = sim_x1, x2 = sim_x2)
names(sims)[1:2] <- c("u1", "u2")
names(sims)
sims %>% ggplot(aes(x = u1, y = u2)) + geom_point()
sims %>% ggplot(aes(x = x1, y = x2)) + geom_point()
sims %>% ggplot(aes(x = u1, y = u2)) + geom_point()
sims %>% ggplot(aes(x = x1, y = x2)) + geom_point()
sims$u1_hat <- rank(sims$x1)/(nrow(sims) + 1)
sims$u2_hat <- rank(sims$x2)/(nrow(sims) + 1)
library(latex2exp)
g <- rbind(sims %>%
select(u1, u2) %>%
mutate(hat = "Simulés"),
sims %>%
select(u1_hat, u2_hat) %>%
rename("u1" = "u1_hat",
"u2" = "u2_hat") %>%
mutate(hat = "Empiriques")
) %>%
mutate(paired = rep(1:nrow(sims), 2)) %>%
ggplot(aes(x = u1, y = u2, color = hat)) +
geom_point(alpha = 0.4, size = 1.5) +
theme_bw()+
geom_line(aes(group = paired), color = "black", alpha = 0.15, size = 0.5) +
scale_color_brewer(palette = "Dark2") +
labs(title = TeX("Relation entre les u simulés et les quantiles empiriques $\\hat{u}$"),
x = TeX("$u_1$"),
y = TeX("$u_2$")) +
theme(legend.title = element_blank())
ggsave("fig/comp_u1u2.png",
g,
width = 15,
height = 11,
units = "cm")
mat1 <- matrix(c(sims$u1_hat, sims$u2_hat),
byrow = FALSE, ncol = 2)
emle(mat1, cop = archmCopula(family = "joe", dim = 2))
pobs(5)
pobs(1:5)
pobs(c(0, 0, 0, 40, 8, 8))
pobs
##empCopula
cop1 <- normCopula(param = 0.7, dim = 2)
##empCopula
cop1 <- normalCopula(param = 0.7, dim = 2)
u_simulated <- rCopula(100, cop1)
## répartition de mix erl
p_dist_oli <- function(x){
sum(dnbinom(0:50, size = 4, mu = 5) *
pgamma(x, 0:50 + 1, 0.1))
}
VaR_MixErl <- function(kap){optimize(function(x){log(abs(kap - p_dist_oli(x)))},
interval = c(0, 350))$minimum}
## sim x1
sim_x1 <- sapply(u_simulated[, 1], function(u) VaR_MixErl(u))
## diagnostic rapide
mean(sim_x1)
diff_u1 <- u_simulated[, 1] - sapply(sim_x1, function(x) p_dist_oli(x))
hist(diff_u1)
summary(diff_u1)
plot(u_simulated[, 1] ~ sapply(sim_x1, function(x) p_dist_oli(x)))
## sim x2
library(tidyverse)
library(actuar)
sim_x2 <- qgenpareto(u_simulated[, 2], shape1 = 3,
shape2 = 5,
scale = 50)
sims  <- data.frame(u_simulated, x1 = sim_x1, x2 = sim_x2)
names(sims)[1:2] <- c("u1", "u2")
names(sims)
sims %>% ggplot(aes(x = u1, y = u2)) + geom_point()
sims %>% ggplot(aes(x = x1, y = x2)) + geom_point()
sims$u1_hat <- pobs(sims$x1)
sims$u2_hat <- pobs(sims$x2)
library(latex2exp)
g <- rbind(sims %>%
select(u1, u2) %>%
mutate(hat = "Simulés"),
sims %>%
select(u1_hat, u2_hat) %>%
rename("u1" = "u1_hat",
"u2" = "u2_hat") %>%
mutate(hat = "Empiriques")
) %>%
mutate(paired = rep(1:nrow(sims), 2)) %>%
ggplot(aes(x = u1, y = u2, color = hat)) +
geom_point(alpha = 0.4, size = 1.5) +
theme_bw()+
geom_line(aes(group = paired), color = "black", alpha = 0.15, size = 0.5) +
scale_color_brewer(palette = "Dark2") +
labs(title = TeX("Relation entre les u simulés et les quantiles empiriques $\\hat{u}$"),
x = TeX("$u_1$"),
y = TeX("$u_2$")) +
theme(legend.title = element_blank())
ggsave("fig/comp_u1u2.png",
g,
width = 15,
height = 11,
units = "cm")
mat1 <- matrix(c(sims$u1_hat, sims$u2_hat),
byrow = FALSE, ncol = 2)
mat1 <- matrix(c(sims$u1_hat, sims$u2_hat),
byrow = FALSE, ncol = 2)
## Inverting Kendall's tau
fit.alph1 <- fitCopula(normalCopula(), mat1, method="mpl")
fit.alph1
confint(fit.alph1)
fit.alph2 <- fitCopula(frankCopula(), mat1, method="mpl")
fit.alph2
confint(fit.alph2)
fit.alph2
fit.alph2 = 2
fit.alph2 <- fitCopula(frankCopula(), mat1, method="mpl")
fit.alph2 +2
fit.alph2[1]
fit.alph2
coef(fit.alph2)
coef(fit.alph2) + 2
rCopula(1e3, copula = frankCopula(dim = 2, alpha = coef(fit.alph2)))
coef(fit.alph2)
rCopula(1e3, copula = frankCopula(dim = 2, coef(fit.alph2)))
rCopula(1e3, copula = frankCopula(coef(fit.alph2), dim = 2))
simuls_c_thetan1<-rCopula(1e3, copula = frankCopula(coef(fit.alph2), dim = 2))
plot(simuls_c_thetan1)
expand.grid(seq(0.001, 0.999, length = 999),
seq(0.001, 0.999, length = 999))
grid_to_test <- expand.grid(seq(0.001, 0.999, length = 999),
seq(0.001, 0.999, length = 999))
plot(grid_to_test)
sqrt(100 000)
3+6
956154564++
31655613
grid_to_test <- expand.grid(seq(0.01, 0.99, length = 99),
seq(0.01, 0.99, length = 99))
plot(grid_to_test)
empCopula(mat1)
mat1[86,]
mat1[100,]
empCopula(U = mat1)
empCopula(UX= mat1)
empCopula(X= mat1)
C.n(empCopula(X= mat1))
C.n(empCopula(X= mat1), u = c(0.5, 0.5))
C.n(X= mat1, u = c(0.5, 0.5))
empcop1 <- function(u) C.n(X= mat1, u)
empcop1_est <- function(u) C.n(X= simuls_c_thetan1, u)
dist_cop1 <- function(u) sqrt(nrow(sims)) *(empcop1(u) - empcop1_est(u))
C.n(X= mat1, mat1)
library(plotly)
ggplotly(g)
g
plotly(g)
plotly::ggplotly(g)
g <- rbind(sims %>%
select(u1, u2) %>%
mutate(hat = "Simulés"),
sims %>%
select(u1_hat, u2_hat) %>%
rename("u1" = "u1_hat",
"u2" = "u2_hat") %>%
mutate(hat = "Empiriques")
) %>%
mutate(paired = rep(1:nrow(sims), 2)) %>%
ggplot(aes(x = u1, y = u2, color = hat)) +
geom_point(alpha = 0.4, size = 1.5) +
theme_bw()
plotly::ggplotly(g)
S_n1 <- sum(sapply(1:nrow(sims), function(i) dist_cop1(sims[i, ])))
i < 4
S_n1 <- sum(sapply(1:nrow(sims), function(i) dist_cop1(mat[i, ])))
S_n1 <- sum(sapply(1:nrow(sims), function(i) dist_cop1(mat1[i, ])))
S_n1
T_n1 <- max(sapply(1:nrow(sims), function(i) dist_cop1(mat1[i, ])))
T_n1
S_n1 <- sum(sapply(1:nrow(sims), function(i) dist_cop1(mat1[i, ])^2))
T_n1 <- max(sapply(1:nrow(sims), function(i) dist_cop1(mat1[i, ])))
(S_n1 <- sum(sapply(1:nrow(sims), function(i) dist_cop1(mat1[i, ])^2)))
(T_n1 <- max(sapply(1:nrow(sims), function(i) dist_cop1(mat1[i, ]))))
(T_n1 <- max(sapply(1:nrow(sims), function(i) abs(dist_cop1(mat1[i, ])))))
## n simuls
simuls<-rCopula(1e2, copula = frankCopula(coef(fit.alph2), dim = 2))
simuls2 <- pobs(simuls)
N <- 1e4
Sn_star <- sapply(seq(N), function(i){
## n simuls
simuls<-rCopula(1e2, copula = frankCopula(coef(fit.alph2), dim = 2))
simuls2 <- pobs(simuls) ## pseudo obs
empcop1 <- function(u) C.n(X= simuls2, u) # copule empirique
fit.alph99 <- fitCopula(frankCopula(), simuls2, method="mpl") # meilleur param
simuls_c_thetan1<-rCopula(1e3, copula = frankCopula(coef(fit.alph99), dim = 2)) # simuls selon meilleur param
empcop1_est <- function(u) C.n(X= simuls_c_thetan1, u) # approx meilleur copule frank
S_star_nk <- sum(sapply(1:nrow(simuls2), function(i){ # dist
(empcop1(simuls2[i, ]) - empcop1_est(simuls2[i, ]))^2
}))
return(S_star_nk)
})
(approx_p_value <- mean(Sn_star > Sn1))
c(0,0) < c(1, 0)
prod(c(0,0) < c(1, 0))
prod(c(0,0) < c(1, 1))
prod(c(0,0) <= c(1, 1))
i < 5
simuls_c_thetan1 < mat1
best_param <- coef(fit.alph2)
simuls_c_thetan1<-rCopula(1e3, copula = frankCopula(best_param, dim = 2))
empcop1 <- function(u) C.n(X= mat1, u)
empcop1_est <- function(u) C.n(X= simuls_c_thetan1, u)
V_i <- function(i) mean(sapply(1:nrow(simuls_c_thetan1), function(j) prod(simuls_c_thetan1[j,] < simuls_c_thetan1[i,])))
dist_cop2 <- function(u) sqrt(nrow(sims)) *(empcop1(u) - empcop1_est(u))
(S_nK <- sum(sapply(1:nrow(sims), function(i) dist_cop2(simuls_c_thetan1[i, ])^2)))
(T_nK <- max(sapply(1:nrow(sims), function(i) abs(dist_cop2(simuls_c_thetan1[i, ])))))
## visualisation : idées
## https://r-graph-gallery.com/3d-surface-plot.html
##
sims
## visualisation : idées
## https://r-graph-gallery.com/3d-surface-plot.html
##
data.frame(mat1, sapply(1:nrow(mat1), function(i) empcop1(mat1[i,])))
## visualisation : idées
## https://r-graph-gallery.com/3d-surface-plot.html
##
to_show_in_3d <- data.frame(mat1, sapply(1:nrow(mat1), function(i) empcop1(mat1[i,])))
plot_ly(z = to_show_in_3d, type = "surface")
data.frame(mat1, sapply(1:nrow(mat1), function(i) empcop1(mat1[i,])))
str(to_show_in_3d)
## visualisation : idées
## https://r-graph-gallery.com/3d-surface-plot.html
##
to_show_in_3d <- data.frame(mat1, "z" = sapply(1:nrow(mat1), function(i) empcop1(mat1[i,])))
View(to_show_in_3d)
plot_ly(z = to_show_in_3d, type = "surface")
View(volcano)
class(volcano)
to_show_in_3d <-sapply(seq(0.01, 0.99, length.out = 99), function(u1){
sapply(seq(0.01, 0.99, length.out = 99), function(u2){
empcop1(c(u1, u2))
})
})
plot_ly(z = to_show_in_3d, type = "surface")
simuls_to_graph <- rCopula(1e5, normalCopula(-0.9))
cop_to_graph <- function(u) C.n(X= simuls_to_graph, u)
to_show_in_3d <-sapply(seq(0.01, 0.99, length.out = 99), function(u1){
sapply(seq(0.01, 0.99, length.out = 99), function(u2){
cop_to_graph(c(u1, u2))
})
})
3+6
simuls_to_graph <- rCopula(1e4, normalCopula(-0.9))
cop_to_graph <- function(u) C.n(X= simuls_to_graph, u)
to_show_in_3d <-sapply(seq(0.01, 0.99, length.out = 99), function(u1){
sapply(seq(0.01, 0.99, length.out = 99), function(u2){
cop_to_graph(c(u1, u2))
})
})
simuls_to_graph <- rCopula(1e3, normalCopula(-0.9))
cop_to_graph <- function(u) C.n(X= simuls_to_graph, u)
to_show_in_3d <-sapply(seq(0.01, 0.99, length.out = 99), function(u1){
sapply(seq(0.01, 0.99, length.out = 99), function(u2){
cop_to_graph(c(u1, u2))
})
})
plot_ly(z = to_show_in_3d, type = "surface")
to_show_in_3d <-sapply(seq(0.01, 0.99, length.out = 99), function(u1){
sapply(seq(0.01, 0.99, length.out = 99), function(u2){
dCopula(c(u1, u2), normalCopula(-0.9))
})
})
plot_ly(z = to_show_in_3d, type = "surface")
